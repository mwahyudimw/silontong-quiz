{"ast":null,"code":"import _defineProperty from \"/home/mwahyudi/Documents/Project/silontong-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mwahyudi/Documents/Project/silontong-quiz/src/container/result/ResultContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { totalNilai } from \"../../redux/actions/contentActions\";\nimport Result from \"../../components/result/Result\";\n\nclass ResultContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nilai: 0,\n      kosong: 0\n    };\n    this.looping = this.looping.bind(this);\n  } //menghitung total nilai dan mengupdate ke state\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.content.answer !== prevProps.content.answer) {\n      const answer = this.props.content.answer;\n      let nilai = 0;\n      let kosong = 0;\n\n      for (let i = 0; i < answer.length; i++) {\n        if (isEmpty(answer[i].value)) {\n          kosong += 1;\n        }\n\n        nilai += answer[i].nilai;\n      }\n\n      this.setState({\n        nilai,\n        kosong\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.looping();\n  } //mengganti nilai yang benar atau salah ke nilai yang ada didalam data\n\n\n  looping() {\n    const answer = this.props.content.answer;\n\n    if (answer.length > 0) {\n      return answer.map(item => {\n        const penilaian = item.jawaban === item.value ? 1 : 0;\n        this.props.totalNilai(_objectSpread({}, item, {\n          nilai: penilaian\n        }));\n      });\n    }\n  }\n\n  render() {\n    const _this$props$content = this.props.content,\n          answer = _this$props$content.answer,\n          time = _this$props$content.time;\n    const _this$state = this.state,\n          nilai = _this$state.nilai,\n          kosong = _this$state.kosong;\n    const nilaiPersentase = nilai / answer.length * 100;\n    const salah = answer.length - nilai - kosong; // console.log(\"kosong\", this.state.kosong);\n\n    return React.createElement(Result, {\n      nilai: nilaiPersentase,\n      benar: nilai,\n      salah: salah,\n      kosong: kosong,\n      startTime: time.start,\n      endTime: time.end,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  content: state.content\n});\n\nexport default connect(mapStateToProps, {\n  totalNilai\n})(ResultContainer);","map":{"version":3,"sources":["/home/mwahyudi/Documents/Project/silontong-quiz/src/container/result/ResultContainer.js"],"names":["React","Component","connect","isEmpty","totalNilai","Result","ResultContainer","constructor","state","nilai","kosong","looping","bind","componentDidUpdate","prevProps","props","content","answer","i","length","value","setState","componentDidMount","map","item","penilaian","jawaban","render","time","nilaiPersentase","salah","start","end","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { totalNilai } from \"../../redux/actions/contentActions\";\nimport Result from \"../../components/result/Result\";\n\nclass ResultContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nilai: 0,\n      kosong: 0\n    };\n    this.looping = this.looping.bind(this);\n  }\n\n  //menghitung total nilai dan mengupdate ke state\n  componentDidUpdate(prevProps) {\n    if (this.props.content.answer !== prevProps.content.answer) {\n      const { answer } = this.props.content;\n      let nilai = 0;\n      let kosong = 0;\n      for (let i = 0; i < answer.length; i++) {\n        if (isEmpty(answer[i].value)) {\n          kosong += 1;\n        }\n        nilai += answer[i].nilai;\n      }\n      this.setState({ nilai, kosong });\n    }\n  }\n\n  componentDidMount() {\n    this.looping();\n  }\n\n  //mengganti nilai yang benar atau salah ke nilai yang ada didalam data\n  looping() {\n    const { answer } = this.props.content;\n    if (answer.length > 0) {\n      return answer.map(item => {\n        const penilaian = item.jawaban === item.value ? 1 : 0;\n        this.props.totalNilai({\n          ...item,\n          nilai: penilaian\n        });\n      });\n    }\n  }\n\n  render() {\n    const { answer, time } = this.props.content;\n    const { nilai, kosong } = this.state;\n    const nilaiPersentase = (nilai / answer.length) * 100;\n    const salah = answer.length - nilai - kosong;\n    // console.log(\"kosong\", this.state.kosong);\n    return (\n      <Result\n        nilai={nilaiPersentase}\n        benar={nilai}\n        salah={salah}\n        kosong={kosong}\n        startTime={time.start}\n        endTime={time.end}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  content: state.content\n});\n\nexport default connect(\n  mapStateToProps,\n  { totalNilai }\n)(ResultContainer);\n"]},"metadata":{},"sourceType":"module"}
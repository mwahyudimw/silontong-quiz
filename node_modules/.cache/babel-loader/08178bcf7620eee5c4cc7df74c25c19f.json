{"ast":null,"code":"import _defineProperty from \"/home/mwahyudi/Documents/clone/Quest-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mwahyudi/Documents/clone/Quest-App/src/container/content/ContentContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable array-callback-return */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { pilihSoal, pilihJawaban, endTime } from \"../../redux/actions/contentActions\";\nimport Content from \"../../components/content/Content\";\nimport moment from \"moment\";\nimport isNaN from \"lodash/isNaN\";\n\nclass ContentContainer extends Component {\n  constructor() {\n    super();\n\n    this.scrollToMyRef = () => window.scrollTo(0, 0);\n\n    this.state = {\n      checked: \"\",\n      result: false,\n      completedAnswer: false,\n      hari: 0,\n      jam: 0,\n      menit: 0,\n      detik: 0\n    };\n    this.onChangeChoices = this.onChangeChoices.bind(this);\n    this.onClickSoal = this.onClickSoal.bind(this);\n    this.onClickSidebar = this.onClickSidebar.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    const answer = this.props.content.answer; // mengambil data soal berdasarkan id routes params\n\n    answer.map((item, idx) => {\n      const index = idx + 1;\n\n      if (index === parseInt(id)) {\n        this.props.pilihSoal(item);\n      }\n    });\n    this.timer = setInterval(this.showRemaining.bind(this), 1000);\n  } //clearing interval\n\n\n  componentWillUnmount() {\n    return clearInterval(this.timer);\n  }\n\n  componentDidUpdate(prevProps) {\n    //mengisi jawaban di setiap soal dan mengupdate ke state\n    const id = this.props.match.params.id;\n    const answer = this.props.content.answer;\n\n    if (id !== prevProps.match.params.id) {\n      return answer.map((item, idx) => {\n        if (idx + 1 === parseInt(id)) {\n          this.setState({\n            checked: item.value\n          });\n        } else if (idx + 1 < parseInt(id)) {\n          this.setState({\n            checked: \"\"\n          });\n        }\n      });\n    }\n  } //fungsi menghitung mundur waktu\n\n\n  showRemaining() {\n    const time = this.props.content.time;\n    var now = new Date();\n    var distance = time.end - now;\n\n    if (isNaN(this.state.detik)) {\n      this.setState({\n        result: true\n      });\n      return clearInterval(() => this.timer);\n    }\n\n    if (distance < 0) {\n      this.setState({\n        result: true\n      });\n      this.props.endTime(time.end);\n      return clearInterval(() => this.timer);\n    }\n\n    var hari = Math.floor(distance / time._hari);\n    var jam = Math.floor(distance % time._hari / time._jam);\n    var menit = Math.floor(distance % time._jam / time._menit);\n    var detik = Math.floor(distance % time._menit / time._detik);\n    this.setState({\n      hari,\n      jam,\n      menit,\n      detik\n    });\n  } //fungsi mengubah jawaban di radio button\n\n\n  onChangeChoices(e) {\n    this.setState({\n      checked: e\n    });\n  }\n\n  onClickSoal() {\n    this.pilihSoal();\n    this.pilihJawaban();\n    this.scrollToMyRef();\n    this.finishTask();\n  } //fungsi memilih soal berdasarkan nomor kotak\n\n\n  onClickSidebar(item) {\n    this.props.pilihSoal(item);\n    this.pilihJawaban();\n    this.scrollToMyRef();\n  } //fungsi untuk mengirim soal ke pages berikutnya\n\n\n  pilihSoal() {\n    const id = this.props.match.params.id;\n    const answer = this.props.content.answer;\n    const page = parseInt(id);\n    return answer.map((item, idx) => {\n      const index = idx; // membandingkan id routes params dengan index\n\n      if (index === page) {\n        this.props.pilihSoal(item);\n      }\n    });\n  } //fungsi mengirim jawaban ke redux\n\n\n  pilihJawaban() {\n    const id = this.props.match.params.id;\n    const answer = this.props.content.answer;\n    const page = parseInt(id);\n    return answer.map((item, idx) => {\n      const index = idx + 1;\n\n      if (index === page) {\n        this.props.pilihJawaban(_objectSpread({}, item, {\n          value: this.state.checked,\n          idx\n        }));\n      }\n    });\n  }\n\n  finishTask() {\n    const id = this.props.match.params.id;\n    const answer = this.props.content.answer;\n    const endTime = new Date();\n    const page = parseInt(id);\n    return answer.map((item, idx) => {\n      const index = idx + 1;\n\n      if (index === page) {\n        if (page === answer.length) {\n          this.setState({\n            result: true\n          });\n          this.props.endTime(moment(endTime).format());\n        }\n      }\n    });\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    const _this$props$content = this.props.content,\n          data = _this$props$content.data,\n          answer = _this$props$content.answer;\n    const _this$state = this.state,\n          checked = _this$state.checked,\n          result = _this$state.result,\n          jam = _this$state.jam,\n          menit = _this$state.menit,\n          detik = _this$state.detik;\n    const page = parseInt(id) + 1;\n    const checkedPage = parseInt(id);\n\n    if (result) {\n      return React.createElement(Redirect, {\n        to: \"/result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Content, {\n      nomor: id,\n      pertanyaan: data.pertanyaan,\n      pilihan: data.pilihan,\n      checked: checked,\n      onChangeChoices: this.onChangeChoices,\n      to: \"/\".concat(page),\n      onClickSoal: this.onClickSoal,\n      data: answer,\n      onClickSidebar: this.onClickSidebar,\n      page: checkedPage,\n      jam: jam,\n      menit: menit,\n      detik: detik,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  content: state.content\n});\n\nexport default connect(mapStateToProps, {\n  pilihSoal,\n  pilihJawaban,\n  endTime\n})(ContentContainer);","map":{"version":3,"sources":["/home/mwahyudi/Documents/clone/Quest-App/src/container/content/ContentContainer.js"],"names":["React","Component","connect","Redirect","pilihSoal","pilihJawaban","endTime","Content","moment","isNaN","ContentContainer","constructor","scrollToMyRef","window","scrollTo","state","checked","result","completedAnswer","hari","jam","menit","detik","onChangeChoices","bind","onClickSoal","onClickSidebar","componentDidMount","id","props","match","params","answer","content","map","item","idx","index","parseInt","timer","setInterval","showRemaining","componentWillUnmount","clearInterval","componentDidUpdate","prevProps","setState","value","time","now","Date","distance","end","Math","floor","_hari","_jam","_menit","_detik","e","finishTask","page","length","format","render","data","checkedPage","pertanyaan","pilihan","mapStateToProps"],"mappings":"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","sourcesContent":["/* eslint-disable array-callback-return */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  pilihSoal,\n  pilihJawaban,\n  endTime\n} from \"../../redux/actions/contentActions\";\nimport Content from \"../../components/content/Content\";\nimport moment from \"moment\";\nimport isNaN from \"lodash/isNaN\";\n\nclass ContentContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      checked: \"\",\n      result: false,\n      completedAnswer: false,\n      hari: 0,\n      jam: 0,\n      menit: 0,\n      detik: 0\n    };\n    this.onChangeChoices = this.onChangeChoices.bind(this);\n    this.onClickSoal = this.onClickSoal.bind(this);\n    this.onClickSidebar = this.onClickSidebar.bind(this);\n  }\n\n  scrollToMyRef = () => window.scrollTo(0, 0);\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    const { answer } = this.props.content;\n    // mengambil data soal berdasarkan id routes params\n    answer.map((item, idx) => {\n      const index = idx + 1;\n      if (index === parseInt(id)) {\n        this.props.pilihSoal(item);\n      }\n    });\n    this.timer = setInterval(this.showRemaining.bind(this), 1000);\n  }\n\n  //clearing interval\n  componentWillUnmount() {\n    return clearInterval(this.timer);\n  }\n\n  componentDidUpdate(prevProps) {\n    //mengisi jawaban di setiap soal dan mengupdate ke state\n    const { id } = this.props.match.params;\n    const { answer } = this.props.content;\n    if (id !== prevProps.match.params.id) {\n      return answer.map((item, idx) => {\n        if (idx + 1 === parseInt(id)) {\n          this.setState({ checked: item.value });\n        } else if (idx + 1 < parseInt(id)) {\n          this.setState({ checked: \"\" });\n        }\n      });\n    }\n  }\n\n  //fungsi menghitung mundur waktu\n  showRemaining() {\n    const { time } = this.props.content;\n    var now = new Date();\n    var distance = time.end - now;\n    if (isNaN(this.state.detik)) {\n      this.setState({ result: true });\n      return clearInterval(() => this.timer);\n    }\n    if (distance < 0) {\n      this.setState({ result: true });\n      this.props.endTime(time.end);\n      return clearInterval(() => this.timer);\n    }\n    var hari = Math.floor(distance / time._hari);\n    var jam = Math.floor((distance % time._hari) / time._jam);\n    var menit = Math.floor((distance % time._jam) / time._menit);\n    var detik = Math.floor((distance % time._menit) / time._detik);\n    this.setState({\n      hari,\n      jam,\n      menit,\n      detik\n    });\n  }\n\n  //fungsi mengubah jawaban di radio button\n  onChangeChoices(e) {\n    this.setState({\n      checked: e\n    });\n  }\n\n  onClickSoal() {\n    this.pilihSoal();\n    this.pilihJawaban();\n    this.scrollToMyRef();\n    this.finishTask();\n  }\n\n  //fungsi memilih soal berdasarkan nomor kotak\n  onClickSidebar(item) {\n    this.props.pilihSoal(item);\n    this.pilihJawaban();\n    this.scrollToMyRef();\n  }\n\n  //fungsi untuk mengirim soal ke pages berikutnya\n  pilihSoal() {\n    const { id } = this.props.match.params;\n    const { answer } = this.props.content;\n    const page = parseInt(id);\n    return answer.map((item, idx) => {\n      const index = idx;\n      // membandingkan id routes params dengan index\n      if (index === page) {\n        this.props.pilihSoal(item);\n      }\n    });\n  }\n\n  //fungsi mengirim jawaban ke redux\n  pilihJawaban() {\n    const { id } = this.props.match.params;\n    const { answer } = this.props.content;\n    const page = parseInt(id);\n    return answer.map((item, idx) => {\n      const index = idx + 1;\n      if (index === page) {\n        this.props.pilihJawaban({\n          ...item,\n          value: this.state.checked,\n          idx\n        });\n      }\n    });\n  }\n\n  finishTask() {\n    const { id } = this.props.match.params;\n    const { answer } = this.props.content;\n    const endTime = new Date();\n    const page = parseInt(id);\n    return answer.map((item, idx) => {\n      const index = idx + 1;\n      if (index === page) {\n        if (page === answer.length) {\n          this.setState({ result: true });\n          this.props.endTime(moment(endTime).format());\n        }\n      }\n    });\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { data, answer } = this.props.content;\n    const { checked, result, jam, menit, detik } = this.state;\n    const page = parseInt(id) + 1;\n    const checkedPage = parseInt(id);\n    if (result) {\n      return <Redirect to='/result' />;\n    }\n    return (\n      <Content\n        nomor={id}\n        pertanyaan={data.pertanyaan}\n        pilihan={data.pilihan}\n        checked={checked}\n        onChangeChoices={this.onChangeChoices}\n        to={`/${page}`}\n        onClickSoal={this.onClickSoal}\n        data={answer}\n        onClickSidebar={this.onClickSidebar}\n        page={checkedPage}\n        jam={jam}\n        menit={menit}\n        detik={detik}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  content: state.content\n});\n\nexport default connect(mapStateToProps, { pilihSoal, pilihJawaban, endTime })(\n  ContentContainer\n);\n"]},"metadata":{},"sourceType":"module"}
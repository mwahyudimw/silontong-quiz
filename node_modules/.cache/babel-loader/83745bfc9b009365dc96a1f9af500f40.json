{"ast":null,"code":"import _defineProperty from \"/home/mwahyudi/Documents/Project/silontong-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-fallthrough */\nimport { PILIH_SOAL, PILIH_JAWABAN, TOTAL_NILAI, START_TIME, END_TIME } from \"../types\";\nimport { dataSoal } from \"../../data/test\";\nimport { shuffle } from \"../../utils/Function\";\nconst initialState = {\n  data: {\n    soal: 1,\n    pertanyaan: \"Harga bola dengan sepatu totalnya Rp. 150.000. Harga sepatu lebih besar Rp 100.000. Berapa harga bola ?\",\n    pilihan: [{\n      key: \"A\",\n      value: \"Rp 50.000\"\n    }, {\n      key: \"B\",\n      value: \"Rp 75.000\"\n    }, {\n      key: \"C\",\n      value: \"Rp 25.000\"\n    }, {\n      key: \"D\",\n      value: \"Rp 150.000\"\n    }],\n    jawaban: \"C\"\n  },\n  answer: shuffle(dataSoal),\n  time: {\n    start: new Date(),\n    end: new Date(),\n    _detik: 1000,\n    _menit: 1000 * 60,\n    _jam: 1000 * 60 * 60,\n    _hari: 1000 * 60 * 60 * 24\n  }\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case PILIH_SOAL:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n\n    case PILIH_JAWABAN:\n      const idx = action.payload.idx;\n      const pos = state.answer.map(function (e, index) {\n        return index;\n      }).indexOf(idx); // mengisi jawaban yang masih kosong\n\n      if (pos === -1) {\n        return _objectSpread({}, state, {\n          answer: [...state.answer, action.payload]\n        });\n      } // untuk mengganti object lama dengan object baru\n      // mengganti jawaban\n      else if (pos === idx) {\n          return _objectSpread({}, state, {\n            answer: state.answer.map(item => item.soal === action.payload.soal ? action.payload : item)\n          });\n        } else {\n          return _objectSpread({}, state, {\n            answer: [...state.answer, action.payload]\n          });\n        }\n\n    case TOTAL_NILAI:\n      return _objectSpread({}, state, {\n        answer: state.answer.map(item => item.soal === action.payload.soal ? action.payload : item)\n      });\n\n    case START_TIME:\n      return _objectSpread({}, state, {\n        time: action.payload\n      });\n\n    case END_TIME:\n      return _objectSpread({}, state, {\n        time: _objectSpread({}, state.time, {\n          end: action.payload\n        })\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/mwahyudi/Documents/Project/silontong-quiz/src/redux/reducers/contentReducer.js"],"names":["PILIH_SOAL","PILIH_JAWABAN","TOTAL_NILAI","START_TIME","END_TIME","dataSoal","shuffle","initialState","data","soal","pertanyaan","pilihan","key","value","jawaban","answer","time","start","Date","end","_detik","_menit","_jam","_hari","state","action","type","payload","idx","pos","map","e","index","indexOf","item"],"mappings":"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","sourcesContent":["/* eslint-disable no-fallthrough */\nimport {\n  PILIH_SOAL,\n  PILIH_JAWABAN,\n  TOTAL_NILAI,\n  START_TIME,\n  END_TIME\n} from \"../types\";\nimport { dataSoal } from \"../../data/test\";\nimport { shuffle } from \"../../utils/Function\";\n\nconst initialState = {\n  data: {\n    soal: 1,\n    pertanyaan:\n      \"Harga bola dengan sepatu totalnya Rp. 150.000. Harga sepatu lebih besar Rp 100.000. Berapa harga bola ?\",\n    pilihan: [\n      {\n        key: \"A\",\n        value: \"Rp 50.000\"\n      },\n      {\n        key: \"B\",\n        value: \"Rp 75.000\"\n      },\n      {\n        key: \"C\",\n        value: \"Rp 25.000\"\n      },\n      {\n        key: \"D\",\n        value: \"Rp 150.000\"\n      }\n    ],\n    jawaban: \"C\"\n  },\n  answer: shuffle(dataSoal),\n  time: {\n    start: new Date(),\n    end: new Date(),\n    _detik: 1000,\n    _menit: 1000 * 60,\n    _jam: 1000 * 60 * 60,\n    _hari: 1000 * 60 * 60 * 24\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case PILIH_SOAL:\n      return { ...state, data: action.payload };\n    case PILIH_JAWABAN:\n      const { idx } = action.payload;\n      const pos = state.answer\n        .map(function(e, index) {\n          return index;\n        })\n        .indexOf(idx);\n      // mengisi jawaban yang masih kosong\n      if (pos === -1) {\n        return { ...state, answer: [...state.answer, action.payload] };\n      }\n      // untuk mengganti object lama dengan object baru\n      // mengganti jawaban\n      else if (pos === idx) {\n        return {\n          ...state,\n          answer: state.answer.map(item =>\n            item.soal === action.payload.soal ? action.payload : item\n          )\n        };\n      } else {\n        return { ...state, answer: [...state.answer, action.payload] };\n      }\n    case TOTAL_NILAI:\n      return {\n        ...state,\n        answer: state.answer.map(item =>\n          item.soal === action.payload.soal ? action.payload : item\n        )\n      };\n    case START_TIME:\n      return { ...state, time: action.payload };\n    case END_TIME:\n      return { ...state, time: { ...state.time, end: action.payload } };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}